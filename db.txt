Project "AirlineBookingSystem" {
  database_type: 'PostgreSQL'
  Note: 'Improved schema with soft deletes, role-permission, time zones, and booking conflict prevention.'
}

// ------------------------------------------------------
// Roles, Users, Permissions
// ------------------------------------------------------

Table roles {
  id int [pk, increment]
  role_name text [not null, note: 'Name of the user role (e.g., Admin, Agent, Customer)']
}

Table permissions {
  id int [pk, increment]
  name varchar [unique, not null, note: 'Permission identifier (e.g., manage_bookings)']
  description varchar [note: 'Detailed explanation of the permission']
}

Table role_permissions {
  role_id int [not null]
  permission_id int [not null]

  Indexes {
    (role_id, permission_id) [unique]
  }
}

Table users {
  id int [pk, increment]
  username varchar [unique, not null, note: 'Unique login name']
  password varchar [not null, note: 'Hashed user password']
  last_login_at timestamp
  is_active bool [default: true, not null]
  person_id int [unique, not null]
  role_id int [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`, not null]
  updated_at timestamp
  deleted_at timestamp

  Indexes {
    (role_id)
    (username) [unique, name: "active_username", note: "Partial index to ignore deleted users"]
  }
}

// ------------------------------------------------------
// Person Info
// ------------------------------------------------------

Table people {
  id int [pk, increment]
  first_name varchar [not null]
  mid_name varchar
  last_name varchar [not null]
  date_of_birth date [not null]
  phone_number varchar
  email varchar
  image_path varchar
  gender_id int [not null]
  address_id int [not null]

  Indexes {
    (address_id)
    (last_name)
  }
}

Table genders {
  id int [pk, increment]
  code char(1) [not null, unique, note: 'M = Male, F = Female']
}

// ------------------------------------------------------
// Location and Airport
// ------------------------------------------------------

Table countries {
  id int [pk, increment]
  name varchar [not null]
  code varchar [unique, not null, note: 'ISO country code']
}

Table cities {
  id int [pk, increment]
  name varchar [not null]
  country_id int [not null]

  Indexes {
    (country_id)
  }
}

Table addresses {
  id int [pk, increment]
  street varchar [not null]
  zip_code varchar [unique, not null]
  city_id int [not null]
}

Table airports {
  id int [pk, increment]
  airport_code varchar [unique, not null, note: 'IATA airport code (e.g., JFK)']
  name varchar [not null]
  city_id int [not null]
  timezone varchar [not null, note: 'IANA time zone (e.g., America/New_York)']
}

Table terminals {
  id int [pk, increment]
  name varchar [not null]
  airport_id int [not null]

  Indexes {
    (airport_id, name) [unique]
  }
}

Table gates {
  id int [pk, increment]
  gate_number varchar [not null]
  terminal_id int [not null]

  Indexes {
    (terminal_id, gate_number) [unique]
  }
}

// ------------------------------------------------------
// Flights and Booking
// ------------------------------------------------------

Table airplanes {
  id int [pk, increment]
  model varchar [not null]
  manufacturer varchar [not null]
  capacity int [not null, note: 'Total number of seats']
  code varchar [unique, not null, note: 'Tail number or internal code']

}

Table flight_status {
  id int [pk, increment]
  status_name varchar [not null, unique, note: 'e.g., Scheduled, Delayed, Cancelled']
}

Table flights {
  id int [pk, increment]
  flight_number varchar [not null]
  departure_time timestamptz [not null]
  arrival_time timestamptz
  airplane_id int [not null]
  arrival_gate_id int [not null]
  departure_gate_id int [not null]
  flight_status_id int [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`, not null]
  updated_at timestamp
  deleted_at timestamp

  Indexes {
    (flight_number, departure_time) [unique]
    (airplane_id)
    (departure_gate_id)
    (arrival_gate_id)
    (flight_status_id)
  }
}

Table bookings {
  id int [pk, increment]
  user_id int [not null]
  flight_id int [not null]
  booking_status_id int [not null]
  booked_at timestamp [default: `CURRENT_TIMESTAMP`, not null]
  ticket_number varchar [unique]
  payment_status varchar [not null, note: 'e.g., Paid, Pending, Failed']
  seat_id int [unique]
  created_at timestamp [default: `CURRENT_TIMESTAMP`, not null]
  updated_at timestamp
  deleted_at timestamp

  Indexes {
    (flight_id)
    (booking_status_id)
    (user_id, flight_id) [unique]
  }
}

Table booking_status {
  id int [pk, increment]
  booking_status_name text [not null, note: 'e.g., Confirmed, Cancelled, Waitlisted']
}

Table user_airports {
  user_id int [not null]
  airport_id int [not null]

  Indexes {
    (user_id, airport_id) [unique]
  }
}

Table flight_classes {
  id int [pk, increment]
  flight_id int [not null]
  class_type_id int [not null]
  seat_capacity int [not null]
  price decimal [not null]

  Indexes {
    (flight_id, class_type_id) [unique]
  }
}

Table class_types {
  id int [pk, increment]
  name varchar [not null, unique, note: 'e.g., Economy, Business, First']
}

Table seats {
  id int [pk, increment]
  class_types_id int [not null]
  seat_number varchar [not null]
  is_reserved bool [default: false, not null]
  airplane_id int [not null]

  Indexes {
    (class_types_id, seat_number) [unique]
  }
}

Table payments {
  id int [pk, increment]
  booking_id int [not null]
  amount decimal [not null]
  method varchar [not null, note: 'e.g., Credit Card, PayPal']
  transaction_id varchar [unique, not null]
  paid_at timestamp [not null]
}

// ------------------------------------------------------
// Relationships
// ------------------------------------------------------

Ref: users.person_id > people.id
Ref: users.role_id > roles.id
Ref: people.address_id > addresses.id
Ref: people.gender_id > genders.id
Ref: cities.country_id > countries.id
Ref: addresses.city_id > cities.id
Ref: airports.city_id > cities.id
Ref: terminals.airport_id > airports.id
Ref: gates.terminal_id > terminals.id
Ref: flights.airplane_id > airplanes.id
Ref: flights.arrival_gate_id > gates.id
Ref: flights.departure_gate_id > gates.id
Ref: flights.flight_status_id > flight_status.id
Ref: bookings.booking_status_id > booking_status.id
Ref: bookings.user_id > users.id
Ref: bookings.seat_id > seats.id
Ref: user_airports.user_id > users.id
Ref: user_airports.airport_id > airports.id
Ref: flight_classes.flight_id > flights.id
Ref: flight_classes.class_type_id > class_types.id
Ref: seats.class_types_id > class_types.id
Ref: payments.booking_id > bookings.id
Ref: role_permissions.role_id > roles.id
Ref: role_permissions.permission_id > permissions.id
Ref: seats.airplane_id > airplanes.id
Ref: bookings.flight_id > flights.id